// <auto-generated />
using System;
using ElasticHabitCalendar.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Persistence.Migrations
{
    [DbContext(typeof(ElasticHabitCalendarDbContext))]
    [Migration("20200501115503_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("ElasticHabitCalendar.Domain.Entities.Habit", b =>
                {
                    b.Property<int>("HabitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("HabitId");

                    b.ToTable("Habits");
                });

            modelBuilder.Entity("ElasticHabitCalendar.Domain.Entities.HabitCompletion", b =>
                {
                    b.Property<int>("HabitCompletionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CompletedHabitHabitId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("HabitDifficultyLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("HabitCompletionId");

                    b.HasIndex("CompletedHabitHabitId");

                    b.ToTable("HabitCompletions");
                });

            modelBuilder.Entity("ElasticHabitCalendar.Domain.Entities.HabitDifficulty", b =>
                {
                    b.Property<int>("HabitDifficultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Definition")
                        .HasColumnType("TEXT");

                    b.HasKey("HabitDifficultyId");

                    b.ToTable("HabitDifficulty");
                });

            modelBuilder.Entity("ElasticHabitCalendar.Domain.Entities.HabitVariant", b =>
                {
                    b.Property<int>("HabitVariantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EliteHabitDifficultyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HabitId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MiniHabitDifficultyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlusHabitDifficultyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("HabitVariantId");

                    b.HasIndex("EliteHabitDifficultyId");

                    b.HasIndex("HabitId");

                    b.HasIndex("MiniHabitDifficultyId");

                    b.HasIndex("PlusHabitDifficultyId");

                    b.ToTable("HabitVariant");
                });

            modelBuilder.Entity("ElasticHabitCalendar.Domain.Entities.HabitCompletion", b =>
                {
                    b.HasOne("ElasticHabitCalendar.Domain.Entities.Habit", "CompletedHabit")
                        .WithMany()
                        .HasForeignKey("CompletedHabitHabitId");
                });

            modelBuilder.Entity("ElasticHabitCalendar.Domain.Entities.HabitVariant", b =>
                {
                    b.HasOne("ElasticHabitCalendar.Domain.Entities.HabitDifficulty", "Elite")
                        .WithMany()
                        .HasForeignKey("EliteHabitDifficultyId");

                    b.HasOne("ElasticHabitCalendar.Domain.Entities.Habit", null)
                        .WithMany("Variants")
                        .HasForeignKey("HabitId");

                    b.HasOne("ElasticHabitCalendar.Domain.Entities.HabitDifficulty", "Mini")
                        .WithMany()
                        .HasForeignKey("MiniHabitDifficultyId");

                    b.HasOne("ElasticHabitCalendar.Domain.Entities.HabitDifficulty", "Plus")
                        .WithMany()
                        .HasForeignKey("PlusHabitDifficultyId");
                });
#pragma warning restore 612, 618
        }
    }
}
