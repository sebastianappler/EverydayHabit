<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
            xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            xmlns:plugin="clr-namespace:Xamarin.Plugin.Calendar.Controls;assembly=Xamarin.Plugin.Calendar"
            xmlns:behaviours="clr-namespace:EverydayHabit.XamarinApp.Common.Behaviours" 
            xmlns:local="clr-namespace:EverydayHabit.XamarinApp.Features.Calendar.HabitCalendar" 
            x:Class="EverydayHabit.XamarinApp.Features.Calendar.HabitCalendar.HabitCalendarView"
            x:Name="habitCalendarPage"
            Title="Calendar"
            Visual="Material"
            >
    
    <ContentPage.BindingContext>
        <local:HabitCalendarViewModel />
    </ContentPage.BindingContext>
    
        <StackLayout 
            Padding="5,10,5,5"
            VerticalOptions="FillAndExpand">
            
            <Picker Title="Selected habit" 
                ItemsSource="{Binding PickerHabitList}" 
                ItemDisplayBinding="{Binding Value}"
                SelectedItem="{Binding SelectedHabit}"
                Margin="7,0"
                    >

                <Picker.Behaviors>
                    <behaviours:EventToCommandBehavior 
                        EventName="SelectedIndexChanged" 
                        Command="{Binding SelectedHabitChangedCommand}" 
                        CommandParameter="{Binding SelectedHabit}" />
                </Picker.Behaviors>
            </Picker>
            
            <plugin:Calendar
                HeightRequest="150"
                Events="{Binding Events}"
                Culture="{Binding Culture}"
                HorizontalOptions="FillAndExpand"
                MaximumDate="{Binding MaximumDate}"
                MinimumDate="{Binding MinimumDate}"
                Month="{Binding Month}"
                SelectedDate="{Binding SelectedDate}"
                VerticalOptions="FillAndExpand"
                Year="{Binding Year}"
                EventIndicatorTextColor="{DynamicResource SecondaryTextColor}"
                DayTappedCommand="{Binding DayTappedCommand}"
                SelectedDayBackgroundColor="{DynamicResource PrimaryColor}"
                TodayOutlineColor="{DynamicResource PrimaryColor}"
                DaysTitleColor="{DynamicResource PrimaryTextColor}"
                DeselectedDayTextColor="{DynamicResource SecondaryTextColor}"
                EventIndicatorSelectedTextColor="{DynamicResource WhiteColor}"
                SelectedDayTextColor="{DynamicResource WhiteColor}"
                >
                <plugin:Calendar.HeaderSectionTemplate>
                    <local:CalendarHeader />
                </plugin:Calendar.HeaderSectionTemplate>

                <plugin:Calendar.EventTemplate>
                    <DataTemplate>
                        <StackLayout
                        Padding="15,0,0,0"
                        HorizontalOptions="FillAndExpand"
                        VerticalOptions="FillAndExpand">
                            <Label
                                FontAttributes="Bold"
                                FontSize="Medium"
                                Text="{Binding Name}" />
                            <Label
                                FontSize="Small"
                                LineBreakMode="WordWrap"
                                Text="{Binding Description}" />
                        </StackLayout>
                    </DataTemplate>
                </plugin:Calendar.EventTemplate>

                <plugin:Calendar.FooterSectionTemplate>
                    <DataTemplate>
                        <local:CalendarFooter />
                    </DataTemplate>
                </plugin:Calendar.FooterSectionTemplate>
            </plugin:Calendar>
            
    <AbsoluteLayout>
        <Button 
            TextColor="{DynamicResource WhiteColor}"
            Command="{Binding HabitCompletedTapped}"
            Style="{StaticResource FabButtonStyle}"
            >
            <Button.ImageSource>
                <FontImageSource 
                         Glyph="check" 
                         FontFamily="{StaticResource MaterialIcon}"
                         Color="{DynamicResource WhiteColor}"
                         Size="30"/>
            </Button.ImageSource>
        </Button>
    </AbsoluteLayout>
    </StackLayout>
</ContentPage>